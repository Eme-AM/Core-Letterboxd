# Docker environment configuration
spring:
  application:
    name: letterboxd-core
  
  # Database Configuration - using Docker service names
  datasource:
    url: jdbc:mysql://mysql:3306/letterboxd_core?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    username: letterboxd
    password: letterboxd123
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        '[format_sql]': false
  
  # RabbitMQ Configuration - using Docker service names
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 60000
    requested-heartbeat: 60
    publisher-confirm-type: correlated
    publisher-returns: true
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2
        acknowledge-mode: manual
        prefetch: 10
        concurrency: 5
        max-concurrency: 10

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,rabbitmq
  endpoint:
    health:
      show-details: always

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:docker-secret-key-for-letterboxd-core-development-only}
  expiration: 86400000

# Custom Event Hub Configuration
letterboxd:
  event-hub:
    retry:
      max-attempts: 3
      delay: 1000
    routing:
      default-exchange: letterboxd.events
      dead-letter-exchange: letterboxd.dlx
    queues:
      movies: movies.events
      users: users.events
      reviews: reviews.events
      social: social.events
      discovery: discovery.events
      analytics: analytics.events

# Logging Configuration
logging:
  level:
    '[com.uade.tpo.demo]': INFO
    '[org.springframework.amqp]': WARN
    '[org.springframework.retry]': WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
